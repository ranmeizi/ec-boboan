{
  "rvt-page": {
    "prefix": "rvt-page",
    "body": [
      "import React from 'react'",
      "import NavBarPage from '@/components/NavBarPage'",
      "",
      "export default function () {",
      "    return <NavBarPage",
      "        title={<div>title</div>}",
      "    >",
      "        rvt-page",
      "    </NavBarPage>",
      "}",
      ""
    ],
    "description": "react function page"
  },
  "rvt-form": {
    "prefix": "rvt-form",
    "body": [
      "import React, { useEffect } from 'react'",
      "import { createForm, PropsWithForm, FormValidateRule } from 'rc-form'",
      "",
      "// 表单组件属性",
      "type FormProps = {",
      "    apiRef?: React.MutableRefObject<any>",
      "}",
      "",
      "// 校验规则",
      "const rules: Record<string, FormValidateRule[]> = {}",
      "",
      "function Form({",
      "    apiRef,",
      "    form",
      "}: PropsWithForm<FormProps, { form: any }>) {",
      "    const { getFieldProps } = form",
      "    useEffect(() => {",
      "        if (apiRef) {",
      "            apiRef.current = form",
      "        }",
      "    }, [])",
      "    return <div>",
      "        rvt-form",
      "    </div>",
      "}",
      "",
      "export default createForm<FormProps>()(Form as any)",
      ""
    ],
    "description": "react function component nav"
  },
  "rvt-component": {
    "prefix": "rvt-component",
    "body": [
      "import React from 'react'",
      "",
      "type Props = {",
      "",
      "}",
      "",
      "export default function ({",
      "",
      "}: Props) {",
      "    return <div>rvt-component</div>",
      "}",
      ""
    ],
    "description": "react function component"
  },
  "ignore-eslint": {
    "prefix": "ignore-eslint",
    "body": [
      "// eslint-disable-next-line ",
    ],
    "description": "忽略eslint"
  },
  "service-type": {
    "prefix": "service-type",
    "body": [
      "export namespace Types {",
      "",
      "}",
      "",
      "export namespace Params {",
      "    ",
      "}",
      "",
      "export namespace DTO {",
      "    ",
      "}"
    ],
    "description": "service-type"
  }
}